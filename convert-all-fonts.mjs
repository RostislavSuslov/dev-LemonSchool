import fs from "fs";
import path from "path";
import ttf2woff2 from "ttf2woff2";

const fontsDir = "./public/assets/fonts";

if (!fs.existsSync(fontsDir)) {
  console.error(`‚ùå –ü–∞–ø–∫–∞ "${fontsDir}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
  process.exit(1);
}

const ttfFiles = fs
  .readdirSync(fontsDir)
  .filter(f => f.toLowerCase().endsWith(".ttf"));

if (ttfFiles.length === 0) {
  console.log("‚ö†Ô∏è –ù–µ—Ç .ttf —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.");
  process.exit(0);
}

for (const file of ttfFiles) {
  const inputPath = path.join(fontsDir, file);
  const outputPath = path.join(fontsDir, file.replace(/\.ttf$/i, ".woff2"));

  try {
    const input = fs.readFileSync(inputPath);
    const output = ttf2woff2(input);
    fs.writeFileSync(outputPath, Buffer.from(output));
    console.log(`‚úÖ ${file} ‚Üí ${path.basename(outputPath)}`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${file}:`, err.message);
  }
}

console.log("\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");


/* 
run convert command:
node convert-all-fonts.mjs   
*/